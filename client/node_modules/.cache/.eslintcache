[{"D:\\Project\\TwitterV2\\client\\src\\index.js":"1","D:\\Project\\TwitterV2\\client\\src\\App.js":"2","D:\\Project\\TwitterV2\\client\\src\\Pages\\LandingPage.jsx":"3","D:\\Project\\TwitterV2\\client\\src\\Pages\\Home.jsx":"4","D:\\Project\\TwitterV2\\client\\src\\Pages\\Comment.jsx":"5","D:\\Project\\TwitterV2\\client\\src\\Helpers\\AuthContext.js":"6","D:\\Project\\TwitterV2\\client\\src\\Components\\Bar.jsx":"7","D:\\Project\\TwitterV2\\client\\src\\Components\\Login.jsx":"8","D:\\Project\\TwitterV2\\client\\src\\Components\\Register.jsx":"9","D:\\Project\\TwitterV2\\client\\src\\Components\\Navbar.jsx":"10","D:\\Project\\TwitterV2\\client\\src\\Components\\Tweet.jsx":"11","D:\\Project\\TwitterV2\\client\\src\\Components\\Post.jsx":"12"},{"size":254,"mtime":1653833901300,"results":"13","hashOfConfig":"14"},{"size":507,"mtime":1653175982090,"results":"15","hashOfConfig":"14"},{"size":2842,"mtime":1653422135434,"results":"16","hashOfConfig":"14"},{"size":981,"mtime":1653165686827,"results":"17","hashOfConfig":"14"},{"size":4460,"mtime":1653470040767,"results":"18","hashOfConfig":"14"},{"size":89,"mtime":1653428202307,"results":"19","hashOfConfig":"14"},{"size":1416,"mtime":1652725362497,"results":"20","hashOfConfig":"14"},{"size":3305,"mtime":1653425555310,"results":"21","hashOfConfig":"14"},{"size":4685,"mtime":1653471455103,"results":"22","hashOfConfig":"14"},{"size":2394,"mtime":1653429443451,"results":"23","hashOfConfig":"14"},{"size":1610,"mtime":1653179534317,"results":"24","hashOfConfig":"14"},{"size":5537,"mtime":1653160877972,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"jhwqpi",{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41"},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48"},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52"},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56"},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60"},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64"},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68"},"D:\\Project\\TwitterV2\\client\\src\\index.js",[],[],"D:\\Project\\TwitterV2\\client\\src\\App.js",[],[],"D:\\Project\\TwitterV2\\client\\src\\Pages\\LandingPage.jsx",[],[],"D:\\Project\\TwitterV2\\client\\src\\Pages\\Home.jsx",[],[],"D:\\Project\\TwitterV2\\client\\src\\Pages\\Comment.jsx",["69","70","71","72","73"],[],"import React from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { useEffect, useState, useContext } from \"react\";\r\nimport { Trash2Fill } from \"react-bootstrap-icons\";\r\nimport { AuthContext } from \"../Helpers/AuthContext\";\r\n\r\nfunction Comment() {\r\n  let { id } = useParams();\r\n  const [tweet, setTweet] = useState({});\r\n  const [comments, setComments] = useState([]);\r\n  const [newComment, setNewComment] = useState(\"\");\r\n\r\n  const { authState } = useContext(AuthContext);\r\n\r\n  useEffect(() => {\r\n    axios.get(`http://localhost:3001/post/${id}`).then((response) => {\r\n      console.log(response.data);\r\n      setTweet(response.data);\r\n    });\r\n    axios.get(`http://localhost:3001/comment/${id}`).then((response) => {\r\n      console.log(response.data);\r\n      setComments(response.data);\r\n    });\r\n  }, []);\r\n\r\n  const addNewComment = (e) => {\r\n    try {\r\n      e.preventDefault();\r\n      axios\r\n        .post(\r\n          \"http://localhost:3001/comment\",\r\n          {\r\n            commentBody: newComment,\r\n            postId: id,\r\n          },\r\n          {\r\n            headers: {\r\n              accessToken: localStorage.getItem(\"accessToken\"),\r\n            },\r\n          }\r\n        )\r\n        .then((response) => {\r\n          console.log(response);\r\n          const commentToAdd = {\r\n            commentBody: newComment,\r\n          };\r\n          setComments([...comments, commentToAdd]);\r\n        });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const deleteComment = (id) => {\r\n    axios\r\n      .delete(`http://localhost:3001/comment/${id}`, {\r\n        headers: {\r\n          accessToken: localStorage.getItem(\"accessToken\"),\r\n        },\r\n      })\r\n      .then(() => {\r\n        setComments(\r\n          comments.filter((value) => {\r\n            return value.id != id;\r\n          })\r\n        );\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"bg-gray-100\">\r\n      <div className=\" grid grid-rows-2 grid-cols-12\">\r\n        <div className=\"col-span-6 px-8 py-4\">\r\n          <div className=\"flex \">\r\n            <img className=\"bg-green-200 h-12 w-12 rounded-full\" />\r\n            <p className=\"font-bold text-black ml-3 mt-1 text-xl\">Ronaldinho</p>\r\n            <p className=\" mt-1 ml-2\">@{tweet.username}</p>\r\n          </div>\r\n          <p className=\"ml-16\">{tweet.caption}</p>\r\n          <img\r\n            src={`http://localhost:3001/${tweet.image}`}\r\n            className=\"mt-3 rounded-lg\"\r\n          />\r\n        </div>\r\n        <div className=\"col-span-6\">\r\n          <div>\r\n            <div className=\"flex px-8 py-4 mt-20\">\r\n              <input\r\n                value={newComment}\r\n                onChange={(event) => {\r\n                  setNewComment(event.target.value);\r\n                }}\r\n                className=\" px-4 py-2 outline-0 border-none placeholder:text-gray-400  w-11/12\"\r\n                placeholder=\"Add Comment\"\r\n              />\r\n              <button\r\n                onClick={addNewComment}\r\n                className=\"bg-blue-400 hover:bg-blue-500 ml-5 text-gray-200 shadow-md px-4 py-2 rounded-xl \"\r\n              >\r\n                <span className=\" cursor-pointer\">Comment</span>\r\n              </button>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"gap-y-5\">\r\n            {comments.map((comment, key) => {\r\n              return (\r\n                <div\r\n                  className=\"bg-slate-100 hover:bg-slate-200 ml-7 rounded-md shadow-lg w-3/4 px-8 py-2 mt-5\"\r\n                  key={key}\r\n                >\r\n                  <div className=\" grid grid-cols-12\">\r\n                    <div className=\"flex col-span-11\">\r\n                      <span className=\"font-bold text-lg text-black\">\r\n                        @{comment.name}\r\n                      </span>\r\n                      <span className=\"ml-3 mt-1\">3 hours ago</span>\r\n                    </div>\r\n                    <Trash2Fill\r\n                      onClick={() => {\r\n                        deleteComment(comment.id);\r\n                      }}\r\n                      className=\"w-5 h-5 cursor-pointer\"\r\n                    />\r\n                    <div className=\"col-span-1 mt-4 cursor-pointer\"></div>\r\n                  </div>\r\n\r\n                  <p className=\"mt-3 ml-4\">{comment.commentBody}</p>\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Comment;\r\n","D:\\Project\\TwitterV2\\client\\src\\Helpers\\AuthContext.js",[],[],"D:\\Project\\TwitterV2\\client\\src\\Components\\Bar.jsx",["74","75"],[],"import React from \"react\";\r\n\r\nfunction Bar() {\r\n  return (\r\n    <div>\r\n      <div className=\"px-4 py-2\">\r\n        <input\r\n          placeholder=\"Search\"\r\n          className=\"px-4 py-2 outline-0 border-0 rounded-xl bg-gray-200\"\r\n        />\r\n      </div>\r\n      <div className=\"px-4 py-2\">\r\n        <div className=\"bg-gray-200 rounded-md px-4 py-4\">\r\n          <div className=\"border-b-gray-200\">\r\n            <p className=\"text-black font-bold\">What is happening</p>\r\n          </div>\r\n          <div className=\"flex\">\r\n            <p className=\"mr-3\">BBC News, Washington</p>\r\n            <p>Last night</p>\r\n          </div>\r\n          <div className=\"grid grid-rows-2 grid-cols-12\">\r\n            <div className=\"col-span-9\">\r\n              <p className=\"text-gray-700 font-bold\">\r\n                Johnny Depp hit me on honeymoon, says Amber Heard\r\n              </p>\r\n            </div>\r\n            <div className=\"col-span-3\">\r\n              <img className=\"rounded-xl bg-green-200 h-24 w-24\" />\r\n            </div>\r\n\r\n            <img />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"px-4 py-2\">\r\n        <div className=\"bg-gray-200 rounded-md px-4 py-4\">\r\n          <div className=\"border-b-gray-200\">\r\n            <p className=\"text-black font-bold\">Who to follow</p>\r\n          </div>\r\n          <div></div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Bar;\r\n","D:\\Project\\TwitterV2\\client\\src\\Components\\Login.jsx",["76","77"],[],"import React from \"react\";\r\nimport axios from \"axios\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nfunction Login() {\r\n  const navigate = useNavigate();\r\n\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const login = (e) => {\r\n    e.preventDefault();\r\n    const data = { email: email, password: password };\r\n    axios.post(\"http://localhost:3001/auth/login\", data).then((response) => {\r\n      if (response.data.error) {\r\n        alert(response.data.error);\r\n      } else {\r\n        localStorage.setItem(\"accessToken\", response.data.data.token);\r\n\r\n        if (response.data.status == \"Success\") {\r\n          navigate(\"/home\");\r\n        }\r\n\r\n        console.log(response.data);\r\n      }\r\n    });\r\n  };\r\n  return (\r\n    <div className=\"\">\r\n      <button className=\"flex justify-center\">\r\n        <label\r\n          for=\"my-modal-4\"\r\n          className=\"bg-white hover:bg-gray-100 shadow-lg mt-5 rounded-md px-4 py-2 w-80 \"\r\n        >\r\n          <div className=\"flex justify-center cursor-pointer\">\r\n            <p className=\"text-black\">Login with Email</p>\r\n          </div>\r\n        </label>\r\n        <input type=\"checkbox\" id=\"my-modal-4\" className=\"modal-toggle\" />\r\n        <label for=\"my-modal-4\" className=\"modal\">\r\n          <label className=\"modal-box relative\" for=\"\">\r\n            <h3 class=\"text-4xl font-bold ml-10\">Login</h3>\r\n            <div className=\"flex justify-center\">\r\n              <form className=\"text-center\">\r\n                <div className=\"mt-12\">\r\n                  <input\r\n                    onChange={(event) => {\r\n                      setEmail(event.target.value);\r\n                    }}\r\n                    name=\"email\"\r\n                    autoComplete=\"off\"\r\n                    type=\"text\"\r\n                    placeholder=\"Email\"\r\n                    className=\"text-gray-800 placeholder:text-gray-700 font-semibold px-4 py-2 rounded-lg bg-gray-400 border-4 border-gray-300 w-10/12\"\r\n                  ></input>\r\n                  <input\r\n                    onChange={(event) => {\r\n                      setPassword(event.target.value);\r\n                    }}\r\n                    type=\"password\"\r\n                    name=\"password\"\r\n                    autoComplete=\"off\"\r\n                    placeholder=\"Password\"\r\n                    className=\"text-gray-800 placeholder:text-gray-700 font-semibold px-4 py-2 mt-5 rounded-lg bg-gray-400 border-4 border-gray-300 w-10/12\"\r\n                  ></input>\r\n                  <div className=\"flex justify-center mt-12\">\r\n                    <button\r\n                      onClick={login}\r\n                      className=\"background px-8 py-2 rounded-md w-96\"\r\n                    >\r\n                      <p className=\"text-xl text-gray-200 font-bold\">Login</p>\r\n                    </button>\r\n                  </div>\r\n                  <div className=\"mt-8\">\r\n                    <p className=\"font-bold text-xl cursor-pointer\">\r\n                      Don't have and account? Click Here\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </label>\r\n        </label>\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","D:\\Project\\TwitterV2\\client\\src\\Components\\Register.jsx",["78","79","80"],[],"import React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nconst Register = () => {\r\n  const navigate = useNavigate();\r\n\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [name, setName] = useState(\"\");\r\n  const [username, setUsername] = useState(\"\");\r\n\r\n  const register = (e) => {\r\n    e.preventDefault();\r\n    const data = {\r\n      email: email,\r\n      password: password,\r\n      name: name,\r\n      username: username,\r\n    };\r\n    axios.post(\"http://localhost:3001/auth/register\", data).then((response) => {\r\n      if (response.data.error) {\r\n        alert(response.data.error);\r\n      } else {\r\n        localStorage.setItem(\"accessToken\", response.data.data.token);\r\n        if (response.data.status == \"Success\") {\r\n          navigate(\"/home\");\r\n        }\r\n        console.log(response.data);\r\n      }\r\n    });\r\n  };\r\n  return (\r\n    <div>\r\n      <div className=\"\">\r\n        <button className=\"flex justify-center\">\r\n          <label\r\n            for=\"my-modal-3\"\r\n            className=\"bg-white hover:bg-gray-100 shadow-lg mt-5 rounded-md px-4 py-2 w-80 \"\r\n          >\r\n            <div className=\"flex justify-center cursor-pointer\">\r\n              <p className=\"text-black\">Register with Email</p>\r\n            </div>\r\n          </label>\r\n          <input type=\"checkbox\" id=\"my-modal-3\" className=\"modal-toggle\" />\r\n          <label for=\"my-modal-3\" className=\"modal\">\r\n            <label className=\"modal-box relative\" for=\"\">\r\n              <h3 class=\"text-4xl font-bold ml-10\">Register</h3>\r\n              <div className=\"flex justify-center\">\r\n                <form className=\"text-center\">\r\n                  <div className=\"mt-12\">\r\n                    <input\r\n                      onChange={(event) => {\r\n                        setEmail(event.target.value);\r\n                      }}\r\n                      name=\"email\"\r\n                      autoComplete=\"off\"\r\n                      type=\"text\"\r\n                      placeholder=\"Email\"\r\n                      className=\"text-gray-800 placeholder:text-gray-700 font-semibold px-4 py-2 rounded-lg bg-gray-400 border-4 border-gray-300 w-10/12\"\r\n                    ></input>\r\n                    <input\r\n                      onChange={(event) => {\r\n                        setPassword(event.target.value);\r\n                      }}\r\n                      type=\"password\"\r\n                      name=\"password\"\r\n                      autoComplete=\"off\"\r\n                      placeholder=\"Password\"\r\n                      className=\"text-gray-800 placeholder:text-gray-700 font-semibold px-4 py-2 mt-5 rounded-lg bg-gray-400 border-4 border-gray-300 w-10/12\"\r\n                    ></input>\r\n                    <input\r\n                      onChange={(event) => {\r\n                        setName(event.target.value);\r\n                      }}\r\n                      type=\"text\"\r\n                      name=\"name\"\r\n                      autoComplete=\"off\"\r\n                      placeholder=\"Full Name\"\r\n                      className=\"text-gray-800 placeholder:text-gray-700 font-semibold px-4 py-2 mt-5 rounded-lg bg-gray-400 border-4 border-gray-300 w-10/12\"\r\n                    ></input>\r\n                    <input\r\n                      onChange={(event) => {\r\n                        setName(event.target.value);\r\n                      }}\r\n                      type=\"text\"\r\n                      name=\"username\"\r\n                      autoComplete=\"off\"\r\n                      placeholder=\"Username\"\r\n                      className=\"text-gray-800 placeholder:text-gray-700 font-semibold px-4 py-2 mt-5 rounded-lg bg-gray-400 border-4 border-gray-300 w-10/12\"\r\n                    ></input>\r\n                    <div className=\"flex justify-center mt-12\">\r\n                      <button\r\n                        onClick={register}\r\n                        className=\"background px-8 py-2 rounded-md w-96\"\r\n                      >\r\n                        <p className=\"text-xl text-gray-200 font-bold\">\r\n                          Register\r\n                        </p>\r\n                      </button>\r\n                    </div>\r\n                    <div className=\"mt-8\">\r\n                      <p className=\"font-bold text-xl cursor-pointer\">\r\n                        Don't have and account? Click Here\r\n                      </p>\r\n                    </div>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </label>\r\n          </label>\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n","D:\\Project\\TwitterV2\\client\\src\\Components\\Navbar.jsx",["81","82"],[],"import React from \"react\";\r\nimport {\r\n  HouseFill,\r\n  Hash,\r\n  BellFill,\r\n  BookmarksFill,\r\n  EnvelopeFill,\r\n  PersonFill,\r\n  ThreeDots,\r\n  BoxArrowDownLeft,\r\n} from \"react-bootstrap-icons\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n// import { AuthContext } from \"./Helpers/AuthContext\";\r\nimport { useState } from \"react\";\r\nfunction Navbar() {\r\n  let navigate = useNavigate();\r\n\r\n  const [authState, setAuthState] = useState(false);\r\n\r\n  const logout = () => {\r\n    localStorage.removeItem(\"accessToken\");\r\n    navigate(\"/landingPage\");\r\n  };\r\n  return (\r\n    <div className=\"flex justify-center mt-10\">\r\n      <div>\r\n        <div className=\"flex\">\r\n          <HouseFill className=\"w-8 h-8 text-blue-400 mr-5\" />\r\n          <p className=\"text-blue-400 font-bold text-md mt-1\">Home</p>\r\n        </div>\r\n        <div className=\"flex mt-8\">\r\n          <Hash className=\"w-8 h-8 text-gray-800 mr-5\" />\r\n          <p className=\"text-gray-800 font-bold text-md mt-1\">Explore</p>\r\n        </div>\r\n        <div className=\"flex mt-8\">\r\n          <BellFill className=\"w-8 h-8 text-gray-800 mr-5\" />\r\n          <p className=\"text-gray-800 font-bold text-md mt-1\">Notification</p>\r\n        </div>\r\n        <div className=\"flex mt-8\">\r\n          <BookmarksFill className=\"w-8 h-8 text-gray-800 mr-5\" />\r\n          <p className=\"text-gray-800 font-bold text-md mt-1\">Bookmarks</p>\r\n        </div>\r\n        <div className=\"flex mt-8\">\r\n          <EnvelopeFill className=\"w-8 h-8 text-gray-800 mr-5\" />\r\n          <p className=\"text-gray-800 font-bold text-md mt-1\">Messages</p>\r\n        </div>\r\n        <div className=\"flex mt-8\">\r\n          <PersonFill className=\"w-8 h-8 text-gray-800 mr-5\" />\r\n          <p className=\"text-gray-800 font-bold text-md mt-1\">Profile</p>\r\n        </div>\r\n        <div className=\"flex mt-8\">\r\n          <ThreeDots className=\"w-8 h-8 text-gray-800 mr-5\" />\r\n          <p className=\"text-gray-800 font-bold text-md mt-1\">More</p>\r\n        </div>\r\n        <div onClick={logout} className=\"flex mt-16 cursor-pointer\">\r\n          <BoxArrowDownLeft className=\"w-8 h-8 text-gray-800 mr-5\" />\r\n          <p className=\"text-gray-800 font-bold text-md mt-1\">Logout</p>\r\n        </div>\r\n        {/* <AuthContext.Provider value={{ authState, setAuthState }}>\r\n          <div></div>\r\n        </AuthContext.Provider> */}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Navbar;\r\n","D:\\Project\\TwitterV2\\client\\src\\Components\\Tweet.jsx",["83","84"],[],"import React from \"react\";\r\nimport axios from \"axios\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nfunction Tweet() {\r\n  let navigate = useNavigate();\r\n\r\n  const [listOfPost, setListOfPost] = useState([]);\r\n\r\n  useEffect(() => {\r\n    axios.get(\"http://localhost:3001/post\").then((response) => {\r\n      console.log(response.data);\r\n      setListOfPost(response.data);\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      {listOfPost.map((listOfPost) => {\r\n        return (\r\n          <div key={listOfPost.id}>\r\n            <div className=\"px-2 py-2\">\r\n              <div className=\"flex\">\r\n                <div>\r\n                  <img className=\"mt-3 mr-3 bg-green-200 rounded-full w-10 h-10\" />\r\n                </div>\r\n                <div\r\n                  onClick={() => {\r\n                    navigate(`/comment/${listOfPost.id}`);\r\n                  }}\r\n                  className=\"ml-2 mt-2 cursor-pointer\"\r\n                >\r\n                  <div className=\"flex\">\r\n                    <p className=\"font-bold text-black mr-2\">Ronaldinho</p>\r\n                    <p>@{listOfPost.username}</p>\r\n                  </div>\r\n                  <p>{listOfPost.caption}</p>\r\n                  <div>\r\n                    <img\r\n                      src={`http://localhost:3001/${listOfPost.image}`}\r\n                      className=\"mt-3 rounded-lg\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Tweet;\r\n","D:\\Project\\TwitterV2\\client\\src\\Components\\Post.jsx",["85","86","87","88","89"],[],"import React from \"react\";\r\nimport { Image, EmojiSmile, FiletypeGif, Upload } from \"react-bootstrap-icons\";\r\nimport axios from \"axios\";\r\nimport { useState, useEffect } from \"react\";\r\n\r\nfunction Post() {\r\n  const [listOfPost, setListOfPost] = useState([]);\r\n  const [preview, setPreview] = useState(null);\r\n\r\n  const [form, setForm] = useState({\r\n    caption: \"\",\r\n    username: \"\",\r\n    image: \"\",\r\n  });\r\n\r\n  const handleChange = (e) => {\r\n    setForm({\r\n      ...form,\r\n      [e.target.name]:\r\n        e.target.type === \"file\" ? e.target.files : e.target.value,\r\n    });\r\n\r\n    if (e.target.type === \"file\") {\r\n      let url = URL.createObjectURL(e.target.files[0]);\r\n      setPreview(url);\r\n    }\r\n  };\r\n\r\n  const onSubmit = (e) => {\r\n    try {\r\n      e.preventDefault();\r\n\r\n      const data = new FormData();\r\n      data.set(\"caption\", form.caption);\r\n      data.set(\"username\", form.username);\r\n      data.set(\"image\", form.image[0], form.image[0].name);\r\n\r\n      axios\r\n        .post(\"http://localhost:3001/post\", data, {\r\n          // headers: {\r\n          //   accessToken: localStorage.getItem(\"accessToken\"),\r\n          // },\r\n        })\r\n        .then((response) => {\r\n          //   const postToAdd = { caption: caption, image: image };\r\n          //   set([...account, accountToAdd]);\r\n          // });\r\n          console.log(response.data);\r\n        });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"mt-5 ml-5\">\r\n        <div className=\"flex\">\r\n          <div className=\"w-16 h-16 bg-green-200 rounded-full\">\r\n            <img />\r\n          </div>\r\n          <div className=\" w-80 h-20 ml-5\">\r\n            <input\r\n              placeholder=\"What is happening ?\"\r\n              className=\"placeholder:text-gray-700  border-none outline-none bg-transparent\"\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"flex\">\r\n          <div className=\"flex gap-2 text-blue-500\">\r\n            <div>\r\n              <label\r\n                for=\"my-modal-4\"\r\n                className=\"btn modal-button bg-gray-100 outline-none border-none hover:bg-blue-100\"\r\n              >\r\n                <Image className=\"h-4 w-4\" />\r\n              </label>\r\n            </div>\r\n\r\n            <input type=\"checkbox\" id=\"my-modal-4\" className=\"modal-toggle\" />\r\n            <label for=\"my-modal-4\" class=\"modal cursor-pointer\">\r\n              <label className=\"modal-box relative bg-gray-200\" for=\"\">\r\n                <form onSubmit={onSubmit}>\r\n                  <div className=\" grid grid-cols-12\">\r\n                    <div className=\"col-span-4\">\r\n                      <div>\r\n                        <div className=\"bg-green-200 w-20 h-20\">\r\n                          {preview && (\r\n                            <img\r\n                              className=\"h-20 w-20 object-cover\"\r\n                              src={preview}\r\n                            />\r\n                          )}\r\n                        </div>\r\n                      </div>\r\n                      <div>\r\n                        <Upload className=\"h-8 w-8 mt-3 ml-5 \" />\r\n                        <input\r\n                          onChange={handleChange}\r\n                          multiple=\"multiple\"\r\n                          name=\"image\"\r\n                          type=\"file\"\r\n                          className=\"cursor-pointer absolute -mt-5 w-28 -ml-16 opacity-0\"\r\n                        ></input>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"col-span-8\">\r\n                      <div>\r\n                        <input\r\n                          onChange={handleChange}\r\n                          autoComplete=\"off\"\r\n                          type=\"text\"\r\n                          name=\"caption\"\r\n                          placeholder=\"What is happening ?\"\r\n                          className=\" text-gray-700 px-4 placeholder:text-gray-700  border-none outline-none bg-transparent\"\r\n                        ></input>\r\n                        <input\r\n                          onChange={handleChange}\r\n                          autocomplete=\"off\"\r\n                          type=\"text\"\r\n                          name=\"username\"\r\n                          placeholder=\"Username\"\r\n                          className=\"placeholder:text-gray-700 text-gray-700 px-4  mt-5 border-none outline-none bg-gray-200\"\r\n                        ></input>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"flex justify-end\">\r\n                    <button\r\n                      for=\"my-modal-4\"\r\n                      className=\" bg-blue-400 hover:bg-blue-500 rounded-lg h-10 w-16\"\r\n                    >\r\n                      <p className=\"text-gray-100 font-bold\">Tweet</p>\r\n                    </button>\r\n                  </div>\r\n                </form>\r\n              </label>\r\n            </label>\r\n            <div className=\"btn bg-gray-100 border-none hover:bg-blue-100\">\r\n              <FiletypeGif />\r\n            </div>\r\n            <div className=\"btn bg-gray-100 border-none hover:bg-blue-100\">\r\n              <EmojiSmile />\r\n            </div>\r\n          </div>\r\n          <div className=\"ml-60\">\r\n            <button className=\"bg-blue-400 hover:bg-blue-500 rounded-2xl px-4 py-2\">\r\n              <p className=\"text-gray-100\">Tweet</p>\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Post;\r\n",{"ruleId":"90","severity":1,"message":"91","line":14,"column":11,"nodeType":"92","messageId":"93","endLine":14,"endColumn":20},{"ruleId":"94","severity":1,"message":"95","line":25,"column":6,"nodeType":"96","endLine":25,"endColumn":8,"suggestions":"97"},{"ruleId":"98","severity":1,"message":"99","line":65,"column":29,"nodeType":"100","messageId":"101","endLine":65,"endColumn":31},{"ruleId":"102","severity":1,"message":"103","line":76,"column":13,"nodeType":"104","endLine":76,"endColumn":68},{"ruleId":"102","severity":1,"message":"103","line":81,"column":11,"nodeType":"104","endLine":84,"endColumn":13},{"ruleId":"102","severity":1,"message":"103","line":28,"column":15,"nodeType":"104","endLine":28,"endColumn":68},{"ruleId":"102","severity":1,"message":"103","line":31,"column":13,"nodeType":"104","endLine":31,"endColumn":20},{"ruleId":"90","severity":1,"message":"105","line":3,"column":20,"nodeType":"92","messageId":"93","endLine":3,"endColumn":29},{"ruleId":"98","severity":1,"message":"106","line":21,"column":34,"nodeType":"100","messageId":"101","endLine":21,"endColumn":36},{"ruleId":"90","severity":1,"message":"105","line":2,"column":20,"nodeType":"92","messageId":"93","endLine":2,"endColumn":29},{"ruleId":"90","severity":1,"message":"107","line":11,"column":20,"nodeType":"92","messageId":"93","endLine":11,"endColumn":31},{"ruleId":"98","severity":1,"message":"106","line":26,"column":34,"nodeType":"100","messageId":"101","endLine":26,"endColumn":36},{"ruleId":"90","severity":1,"message":"91","line":18,"column":10,"nodeType":"92","messageId":"93","endLine":18,"endColumn":19},{"ruleId":"90","severity":1,"message":"108","line":18,"column":21,"nodeType":"92","messageId":"93","endLine":18,"endColumn":33},{"ruleId":"102","severity":1,"message":"103","line":26,"column":19,"nodeType":"104","endLine":26,"endColumn":84},{"ruleId":"102","severity":1,"message":"103","line":40,"column":21,"nodeType":"104","endLine":43,"endColumn":23},{"ruleId":"90","severity":1,"message":"105","line":4,"column":20,"nodeType":"92","messageId":"93","endLine":4,"endColumn":29},{"ruleId":"90","severity":1,"message":"109","line":7,"column":10,"nodeType":"92","messageId":"93","endLine":7,"endColumn":20},{"ruleId":"90","severity":1,"message":"110","line":7,"column":22,"nodeType":"92","messageId":"93","endLine":7,"endColumn":35},{"ruleId":"102","severity":1,"message":"103","line":60,"column":13,"nodeType":"104","endLine":60,"endColumn":20},{"ruleId":"102","severity":1,"message":"103","line":89,"column":29,"nodeType":"104","endLine":92,"endColumn":31},"no-unused-vars","'authState' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.","ArrayExpression",["111"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useEffect' is defined but never used.","Expected '===' and instead saw '=='.","'setUsername' is assigned a value but never used.","'setAuthState' is assigned a value but never used.","'listOfPost' is assigned a value but never used.","'setListOfPost' is assigned a value but never used.",{"desc":"112","fix":"113"},"Update the dependencies array to be: [id]",{"range":"114","text":"115"},[849,851],"[id]"]